@model TeamCatApp.ViewModel.AssignProjectViewModel

@{
    ViewBag.Title = "Assign Projects";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Assign Projects</h2>


<form id="submit_form">
    <div class="form-group">
        @Html.LabelFor(vm => vm.Teams)
        @Html.DropDownListFor(vm => vm.Teams, new SelectList(Model.Teams, "Id", "TeamName"), "--SELECT TEAM--", new { @class = "form-control", @id = "ddlTeams" })
        @Html.ValidationMessageFor(vm => vm.Teams, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(vm => vm.Users)
        @Html.DropDownListFor(vm => vm.Users, new SelectList(string.Empty, "Value", "Text"), "--SELECT EMPLOYEE--", new { @class = "form-control", @id = "ddlUsers" })
        @Html.ValidationMessageFor(vm => vm.Users, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(vm => vm.AssignedDate)
        @Html.TextBoxFor(vm => vm.AssignedDate, new { @class = "form-control", @id = "assign-date", @placeholder = "--PICK A DATE--" })
        @Html.ValidationMessageFor(vm => vm.AssignedDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(vm => vm.Frequencies)
        @Html.DropDownListFor(vm => vm.Frequencies, new SelectList(Model.Frequencies, "Frequncy"), "--SELECT PROJECT FREQUENCY", new { @class = "form-control", @id = "ddlFrequencies" })
        @Html.ValidationMessageFor(vm => vm.Frequencies, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(vm => vm.Projects)
        @Html.DropDownListFor(vm => vm.Projects, new SelectList(string.Empty, "Value", "Text"), "--SELECT PROJECT--", new { @class = "form-control", @id = "ddlProjects" })
        @Html.ValidationMessageFor(vm => vm.Projects, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(vm => vm.AssignedHour)
        @Html.TextBoxFor(vm => vm.AssignedHour, new { @class = "form-control", @id = "assigned_hour" })
        @Html.ValidationMessageFor(vm => vm.AssignedHour, "", new { @class = "text-danger" })
    </div>

    <input type="button" id="add-data-in-view" class="btn btn-primary btn-sm" value="Add">

    <div class="panel-body">
        <table id="assigned-projects-table" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Employee</th>
                    <th>Projct Name</th>
                    <th>Project Frequency</th>
                    <th>Date</th>
                    <th>Hours</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <input type="button" id="submit-assigned-projects" class="btn btn-success btn-lg" value="Save" />
</form>



@*table template*@
<div id="table_template" style="display:none">
    <table>
        <tr class="row-template">
            <td class="employee"></td>
            <td class="project"></td>
            <td class="frequency"></td>
            <td class="assignDate"></td>
            <td class="hour"></td>
            <td>
                <input type="button" value="Modify" class="modify btn btn-warning" />
                <input type="button" value="Delete" class="delete btn btn-danger" />
            </td>
        </tr>
    </table>
</div>


@section scripts {
    <script>
        $(function () {
            // Reset UI controls
            resetUiControls();

            // For populating teams to employees dropdownlist
            $("#ddlTeams").change(function () {
                let teamId = $("#ddlTeams").val();
                if (teamId === "") {
                    return false;
                }

                $("#ddlUsers").empty();

                var json = { teamId: teamId }
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetUsersByTeamId","AssignProjects")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (data) {
                        $("#ddlUsers").append('<option value=> --SELECT EMPLOYEE--</option>');
                        $.each(data, function (key, value) {
                            $("#ddlUsers").append('<option value=' + value.Id + '>' + value.UserName + '</option>');
                        });
                    }
                });
            });

            // For populating frequency to project dropdownlist
            $("#ddlFrequencies").change(function () {
                let freqName = $("#ddlFrequencies").val();
                if (freqName == null) {
                    return false;
                }

                $("#ddlProjects").empty();

                var json = { frequncy: freqName }
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetProjectsByFrequency","AssignProjects")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (data) {
                        $("#ddlProjects").append('<option value=> --SELECT PROJECT--</option>');
                        $.each(data, function (key, value) {
                            $("#ddlProjects").append('<option value=' + value.ID + '>' + value.ProjectName + '</option>');
                        });
                    }
                });
            });

            // Datepicker
            $("#assign-date").datepicker({
                showAnim: "drop",
                showOn: "button",
                buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif",
                buttonImageOnly: true,
                showWeek: true,
                changeMonth: true,
                changeYear: true,
                dateFormat:"dd/mm/yy"
            });

            // For rendering gridview/table
            $("#add-data-in-view").click(function () {
                let $form = $("#submit_form");

                if ($form.valid()) {
                    let $gridView = $("#assigned-projects-table");

                    // For modify button
                    let $chosedTeamValue = $("#ddlTeams option:selected").val();
                    let $chosedFreqValue = $("#ddlFrequencies option:selected").val();

                    let $selectedEmployee = $("#ddlUsers option:selected").text();
                    let $selectedProject = $("#ddlProjects option:selected").text();
                    let $selectedDate = $("#assign-date").val();
                    let $selectedFrequency = $("#ddlFrequencies option:selected").text();
                    let $assignedHour = $("#assigned_hour").val();

                    let $templateRow = $("#table_template").find(".row-template").clone();

                    $templateRow.find(".employee").html($selectedEmployee);
                    $templateRow.find(".project").html($selectedProject);
                    $templateRow.find(".frequency").html($selectedFrequency);
                    $templateRow.find(".assignDate").html($selectedDate);
                    $templateRow.find(".hour").html($assignedHour);

                    // Delete table row.
                    $templateRow.find(".delete").click(function () {
                        $templateRow.remove();
                    });

                    // Modify table row
                    $templateRow.find(".modify").click(function () {
                        resetUiControls();
                        $("#ddlTeams").val($chosedTeamValue);
                        $("#ddlTeams").trigger('change');

                        $("#ddlFrequencies").val($chosedFreqValue);
                        $("#ddlFrequencies").trigger('change');

                        $("#assign-date").val($selectedDate);
                        $("#assigned_hour").val($assignedHour);
                        $templateRow.remove();
                    });

                    // check duplication
                    $("#assigned-projects-table tr:not(:first)").each(function () {
                        let rowText = $(this).text();

                        if (rowText === $templateRow.text()) {
                            alert("Duplicate data");
                            $templateRow.empty();
                            resetUiControls();
                            return false;
                        }
                    });

                    $gridView.append($templateRow);
                }
            });

            function resetUiControls() {                
                $("#ddlTeams").prop('selectedIndex', 0);
                //$("#ddlTeams").trigger('change');
                
                $("#ddlFrequencies").prop('selectedIndex', 0);
                //$("#ddlFrequencies").trigger('change');

                $("#ddlUsers").empty();
                $("#ddlProjects").empty();

                $("#assigned_hour").val('');
                $("#assign-date").val('');
            }

            // Submitting assgined projects to controller
            $("#submit-assigned-projects").click(function () {
                //check if the form is valid or not
                let $form = $("#submit_form");
                if (!$form.valid()) {
                    alert("Fill up the form first");
                    return false;
                }

                //check if table is empty or not
                let $tableBody = $("#assigned-projects-table tbody");
                if ($tableBody.children().length === 0) {
                    alert("Taks list if empty. Unable to save");
                    return false;
                }

                const $listOfTaskUrl = '@Url.Action("Index", "ListOfAssignedProjects")';
                const $saveTaskUrl = '@Url.Action("SaveAssignedProjects", "AssignProjects")';

                let assignedProjectList = new Array();

                // Get all the values of HTML table except header
                $("#assigned-projects-table tr:not(:first)").each(function () {
                    let tableData = $(this).find("td");
                    let assignProject = { EmployeeName: $(tableData[0]).text(), ProjectName: $(tableData[1]).text(), Frequency: $(tableData[2]).text(), AssignedDate: $(tableData[3]).text(), AssignedHour: $(tableData[4]).text() }
                    assignedProjectList.push(assignProject);
                });

                $.ajax({
                    type: "POST",
                    url: $saveTaskUrl,
                    dataType: "json",
                    data: JSON.stringify(assignedProjectList),
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        if (!result) {
                            console.log(result);
                            alert("save failed. Possible duplicate task");
                            return false;
                        }
                        else {
                            alert("Saved Successfully");
                            window.location.href = $listOfTaskUrl;
                        }

                    },
                    error: function () {
                        console.log("Error happend");
                    }
                });
            });
        });
    </script>
}